Playing around with associating tags ("facets") with things 
("assets"), with a simple query language to search for assets 
that have particular tags.

ca.hullabaloo.facets.FExprParser implements a simple grammer 
(not particularly robustly), so you can search like 
"(facetA:val1 || facetB:val2) && !facetB:val5"

We run the same FExpr over three types of asset->facet storage

 * ca.hullabaloo.facets.MultimapAssetFacets
    Uses a SetMultimap from guava-libraries to store the associations,
    and the query basically does union/intersect on the resulting sets

 * ca.hullabaloo.facets.BitSetAssetFacets
    Uses a Map of Facet to java.util.Bitset, with one bit set for
    each asset assigned the facet.  The query basically does bitwise
    ANDs and ORs over the BitSet

 * ca.hullabaloo.facets.CompressedAssetFacets
    Similar to the previous, except this uses a map based on a 
    patricia trie, with the idea that keys like facet:foo and 
    facet:bar will take less space in memory (at a computational 
    cost).  Also, the bitset is an RLE-compressed bitset which 
    does not require decompression to execute bitwise AND and OR
    against other compressed bitsets.  Queries operate exactly
    as those of BitSetAssetFacets.


As always, start with classes ending in '*Test'

